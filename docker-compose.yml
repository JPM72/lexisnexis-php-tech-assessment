version: '3.8'

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: document_search_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: document_search
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/migrations:/docker-entrypoint-initdb.d
    networks:
      - document_search_network

  # PHP Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: document_search_backend
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html
      - ./backend/storage:/var/www/html/storage
    environment:
      DB_HOST: database
      DB_NAME: document_search
      DB_USER: app_user
      DB_PASS: app_password
      DB_PORT: 3306
    depends_on:
      - database
    networks:
      - document_search_network

  # Angular Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: document_search_frontend
    restart: always
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      API_BASE_URL: http://localhost:8000
    depends_on:
      - backend
    networks:
      - document_search_network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: document_search_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - document_search_network

volumes:
  mysql_data:
    driver: local

networks:
  document_search_network:
    driver: bridge